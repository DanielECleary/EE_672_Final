#include <iostream>
#include <string>

using namespace std;

// TO DO: statements to determine bot choices, tatements to determine if the modifiers are needed based
// on history, output for if you win/ lose, way to tracks wins and losses

// set up intial weights
int rock = 1;
int paper = 1;
int scissors = 1;
int roles = 3;
// modified value for roles based on found patterns, default to 0 and changed as needed
int rmod = 0;
int pmod = 0;
int smod = 0;
int rolesmod = 0;
// probabilities for the three choices
float rchance = 0.0;
float pchance = 0.0;
float schance = 0.0;
float probchoice = 0.0; // this is the value we erference for each run of the game, equals probability func

string choice = "";
string history[3] = {"", "", ""};

float probability(){ // random probability generator
    float num = rand();
    while ( num >= 1.0e+9){ // reroll if number is too high
        num = rand();
    }
    if (num <= 0) // rand picked a negative number
        num *= -1;
    int n = 10;
    while (num/n >= 1.0){
        n *= 10; // keep dividing by 10^i until we get a value between 0 and 1, where i is the number of runs
    }
    cout << num/n << endl;
    return num/n;
}

int main(){
    cout << "Welcome to a Rock Paper Scissors Bot!" << endl;
    cout << "Please enter r for rock, p for paper, or s for scissors. To end the game, type end: ";
    cin >> choice;
    while (choice != "end"){ // until the chose end play the game
        if (choice != "r" && choice != "p" && choice != "s"){ // failed to pick proper role
            cout << "invalid choice" << endl;
        }
        else{ // game is played
            if (choice == "r"){ //update rock and roles
                rock ++;
                roles++;
            }
            if (choice == "p"){ // update paper and roles
                paper ++;
                roles++;
            }
            if (choice == "s"){ // update scissors and roles
                scissors ++;
                roles++;
            }
            history[2] = history[1]; // keep track of history
            history[1] = history[0];
            history[0] = choice;
            
            //set probability for the stage
            probchoice = probability();
        }
        cout << "Please enter r for rock, p for paper, or s for scissors. To end the game, type end: "; // repeat loop
        cin >> choice;
    }
    cout << "Thanks for playing!";
    return 0;
}
